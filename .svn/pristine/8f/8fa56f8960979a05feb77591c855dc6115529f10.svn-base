<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-lazy-init="true">

	<description>Shiro安全配置</description>

	<!-- 验证码配置 -->
<!--	<bean claDreamCaptchatcha">
		<property name="cacheManager" ref="shiroSpringCacheManager" />
		&lt;!&ndash; 复用半小时缓存 &ndash;&gt;
		<property name="cacheName" value="halfHour" />
	</bean>-->
	
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">    
	        <property name="globalSessionTimeout" value="1800000"/>    
	        <property name="deleteInvalidSessions" value="true"/>    
	        <property name="sessionDAO" ref="sessionDAO"/>  
	        <!-- url上带sessionId 默认为true -->
        	<property name="sessionIdUrlRewritingEnabled" value="false"/>  
	        <!-- 定时检查失效的session -->  
	        <property name="sessionValidationSchedulerEnabled" value="true"/>  
	        <!-- 间隔多少时间检查，不配置是60分钟 -->
	        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>  
	        <!-- 是否启用/禁用Session Id Cookie,默认是启用的 -->
	        <property name="sessionIdCookieEnabled" value="true"/>    
	</bean>
	<!-- 会话DAO，sessionManager里面的session需要保存在会话Dao里，没有会话Dao，session是瞬时的，没法从  
     sessionManager里面拿到session -->    
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">    
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
    </bean> 


 	   <!-- 会话验证调度器 -->  
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler ">  
        <property name="interval" value="1800000"/>  
        <property name="sessionManager" ref="sessionManager"/>  
    </bean> 
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">  
     	<property name="redirectUrl" value="/login" />  
    </bean> 
    

	<!--安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--设置自定义Realm -->
		<property name="realm" ref="shiroDbRealm" />

		<!-- 记住密码管理 -->
		<!--<property name="rememberMeManager" ref="rememberMeManager" />-->
		<property name="sessionManager" ref="sessionManager" />

	</bean>

	<!-- 自定义的Realm -->
	<bean id="shiroDbRealm" class="com.ccx.models.shiro.ShiroDbRealm">
<!-- 		<constructor-arg index="0" name="cacheManager" -->
<!-- 			ref="shiroSpringCacheManager" /> -->
<!-- 		<constructor-arg index="1" name="matcher" ref="credentialsMatcher" /> -->
		<!-- 启用身份验证缓存，即缓存AuthenticationInfo信息，默认false -->
		<property name="authenticationCachingEnabled" value="true" />
		<!-- 缓存AuthenticationInfo信息的缓存名称 -->
		<property name="authenticationCacheName" value="authenticationCache" />
		<!-- 缓存AuthorizationInfo信息的缓存名称 -->
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>

	<!-- 记住密码Cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<!-- 7天,采用spring -->
		<property name="maxAge" value="#{7 * 24 * 60 * 60}" />
	</bean>

	<!-- rememberMe管理器,cipherKey生成见{@code Base64Test.java} -->
	<!--<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('5aaC5qKm5oqA5pyvAAAAAA==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>-->

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 安全管理器 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 默认的登陆访问url -->
		<property name="loginUrl" value="/login" />
		<!-- 登陆成功后跳转的url -->
		<property name="successUrl" value="/index" />
		<!-- 没有权限跳转的url -->
		<property name="unauthorizedUrl" value="/unauth" />
		<property name="filters">
			<map>
				<entry key="user" value-ref="ajaxSessionFilter" />
				<entry key="anyRoles" value-ref="anyRoles"/>  
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				<!-- anon 不需要认证 authc 需要认证 user 验证通过或RememberMe登录的都可以 -->
				/captcha.jpg = anon
				/favicon.ico = anon
				/commons/** = anon
				/static/** = anon
				/webhooks = anon
				/login = anon
				/checkLogin = anon
				/logout = anon
				/unauth = anon
				/resources/** = anon
				/getLeftNavigation = anon
				/getWarnMsg = anon
<!-- 				/getVerifyCode = anon -->
<!-- 				/authImage = anon -->
				/validateCode/selectByNameOrMobile = anon
				/validateCode/getCode = anon
				/**=  authc
<!-- /**=anon -->
			</value>
		</property>
		
	</bean>
	<!-- 自定义角色权限控制 -->
    <bean id="anyRoles" class="com.ccx.models.shiro.RolesOrAuthorizationFilter" />
	<!-- ajax session超时时处理 -->
	<bean id="ajaxSessionFilter" class="com.ccx.models.shiro.ShiroAjaxSessionFilter" />



	<!-- 在方法中 注入 securityManager ，进行代理控制 -->
<!--	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>-->

	<!-- shiro密码加密配置 -->
	<!--<bean id="passwordHash" claPasswordHashHash">
		&lt;!&ndash; 密码加密 1次md5,增强密码可修改此处 &ndash;&gt;
		<property name="algorithmName" value="md5" />
		<property name="hashIterations" value="1" />
	</bean>-->

	<!-- 密码错误5次锁定半小时 -->
<!-- 	<bean id="credentialsMatcher" claRetryLimitCredentialsMatchercher"> -->
<!-- 		<constructor-arg index="0" name="cacheManager" -->
<!-- 			ref="shiroSpringCacheManager" /> -->
<!-- 		<property name="retryLimitCacheName" value="halfHour" /> -->
<!-- 		<property name="passwordHash" ref="passwordHash" /> -->
<!-- 	</bean> -->

	<!--Shiro生命周期处理器 -->
	<!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />-->
	
	<!--启用shiro注解 -->
	<!--<bean-->
		<!--class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"-->
		<!--depends-on="lifecycleBeanPostProcessor" />-->
	<!--<bean-->
		<!--class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
		<!--<property name="securityManager" ref="securityManager" />-->
	<!--</bean>-->

</beans>