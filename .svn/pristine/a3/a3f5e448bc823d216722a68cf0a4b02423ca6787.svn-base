package com.ccx.models.datafile;

import com.alibaba.fastjson.JSON;
import com.ccx.models.api.datafile.ModelsDataFileApi;
import com.ccx.models.api.datafile.ModelsFileInfoApi;
import com.ccx.models.api.datafile.ModelsFileValueApi;
import com.ccx.models.model.datafile.ModelsDataFile;
import com.ccx.models.model.datafile.ModelsFileInfo;
import com.ccx.models.model.datafile.ModelsFileValue;
import com.ccx.models.util.ImportUtils;
import com.ccx.models.util.JsonResult;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.InputStream;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @description 数据文件
 * @author xzd
 * @date 2017/11/21
 */
@Controller	
@RequestMapping("/modelsDataFile")
public class ModelsDataFileController {
	private static final Logger logger = LoggerFactory.getLogger(ModelsDataFileController.class);
		
	@Autowired	
	private ModelsDataFileApi modelsDataFileApi;

	/**
	 * 数据文件列表展示
	 * @param request
	 * @return
	 */
	@GetMapping("/list")
	public ModelAndView list(HttpServletRequest request) {
		return new ModelAndView("datafile/datafileList");
	}

	/**
	 * 查询数据文件列表
	 * @return
	 */
	@PostMapping("/findAll")
	@ResponseBody
	public JsonResult findAll(HttpServletRequest request, Integer pageNo, Integer pageSize){
		/*//获取查询条件
		Map<String, Object> params = ControllerUtil.requestMap(request);*/

		try {
			List<ModelsDataFile> list = modelsDataFileApi.getList();

			//成功标识
			return JsonResult.ok(list);
		} catch (Exception e) {
			e.printStackTrace();
			logger.error("查询数据文件失败:", e);
			//失败标识
			return JsonResult.error("查询数据文件失败！");
		}
	}

	/**
	 * 数据文件导入
	 * @param request
	 * @return
	 */
	@PostMapping("/importDataFile")
	@ResponseBody
	public String importDataFile(HttpServletRequest request, HttpServletResponse response, @RequestParam("dataFile") MultipartFile dataFile) {
		//result jsp map
		Map<String, Object> resultMap = new HashMap<>();

		if (dataFile == null || dataFile.isEmpty()) {
			resultMap.put("code", 500);
			resultMap.put("msg", 401);
			logger.error("上传文件报错，错误原因============>没有上传文件");
			return JSON.toJSONString(resultMap);
		}

		try {
			modelsDataFileApi.save(dataFile);
			resultMap.put("code", 200);
		} catch (Exception e) {
			logger.error("文件导入失败！");
			resultMap.put("code", 500);
			e.printStackTrace();
		}

		return JSON.toJSONString(resultMap);
	}

	/**
	 * 文件详情
	 * @param request
	 * @return
	 */
	@GetMapping("/fileInfo")
	public ModelAndView fileInfo(HttpServletRequest request) {
		return new ModelAndView("datafile/fileInfo");
	}

	/**
	 * 查询数据文件详情和文件变量以及变量值
	 * @return
	 */
	@PostMapping("/findFileInfo")
	@ResponseBody
	public JsonResult findFileInfo(HttpServletRequest request){
		//数据文件id
		Integer dataFileId = Integer.valueOf(request.getParameter("id"));

		try {
			List<ModelsDataFile> list = modelsDataFileApi.getList();

			//成功标识
			return JsonResult.ok(list);
		} catch (Exception e) {
			e.printStackTrace();
			logger.error("查询数据文件失败:", e);
			//失败标识
			return JsonResult.error("查询数据文件失败！");
		}
	}
}	
