package com.ccx.models.service.impl.modelsLibrary;

import com.ccx.models.api.modelsLibrary.ModelsLibraryApi;
import com.ccx.models.mapper.modelsLibrary.ModelsLibraryMapper;
import com.ccx.models.model.ModelsExtract;
import com.ccx.models.model.ModelsExtractTestRecord;
import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;

@Service("ModelsLibraryApi")
public class ModelsLibraryServiceImpl implements ModelsLibraryApi {
		
	@Autowired
    private ModelsLibraryMapper modelsLibraryMapper;

    /**
     * @Description: 根据模型name获取模型list
     * @Author: wxn
     * @Date: 2017/12/12 11:13:04
     * @Param:modelName
     * @Return
     */
	@Override
	public List<ModelsExtract> getModelsExtractListByName(String modelName) {
		return modelsLibraryMapper.getModelsExtractListByName(modelName);
	}

	/**
	 * @Description:通过模型项目id和算法id查找模型list
	 * @Author: wxn
	 * @Date: 2017/12/12 13:21:02
	 * @Param: [programId, arithmeticId]
	 * @Return java.util.List<com.ccx.models.model.ModelsExtract>
	 */
	@Override
	public List<ModelsExtract> getModelsExtractListById(Long programId,Long arithmeticId){
		return modelsLibraryMapper.getModelsExtractListById(programId,arithmeticId);
	}

	/**
	 * @Description:保存模型信息
	 * @Author: wxn
	 * @Date: 2017/12/12 13:33:22
	 * @Param: [modelsExtract]
	 * @Return int
	 */
	@Override
	public int saveModelsExtract(ModelsExtract modelsExtract){
		return modelsLibraryMapper.saveModelsExtract(modelsExtract);
	}

    /**
     * @Description: 分页查询模型列表
     * @Author: wxn
     * @Date: 2017/12/12 14:44:43
     * @Param: [paramMap]
     * @Return com.github.pagehelper.PageInfo<com.ccx.models.model.ModelsExtract>
     */
    @Override
    public PageInfo<ModelsExtract> getModelsPageList(Map<String, Object> paramMap){
        List<ModelsExtract> modelsPageList = modelsLibraryMapper.getModelsPageList(paramMap);
        PageInfo<ModelsExtract> pageInfo = new PageInfo<>(modelsPageList);
        return pageInfo;
    }

    /**
     * @Description: 通过模型id删除模型
     * @Author: wxn
     * @Date: 2017/12/12 16:10:00
     * @Param: [modelsExtract]
     * @Return int
     */
    @Override
    public int updateModelById(ModelsExtract modelsExtract){
        return modelsLibraryMapper.updateModelById(modelsExtract);
    }

    /**
     * @Description: 通过id获取模型基本信息
     * @Author: wxn
     * @Date: 2017/12/12 16:25:12
     * @Param: [modelId]
     * @Return com.ccx.models.model.ModelsExtract
     */
    @Override
    public ModelsExtract getModelById(Long modelId){
        return modelsLibraryMapper.getModelById(modelId);
    }

	/**
	 * @Description: 获取模型测试记录列表
	 * @Author: wxn
	 * @Date: 2017/12/13 11:52:21
	 * @Param: [paramMap]
	 * @Return com.github.pagehelper.PageInfo<com.ccx.models.model.ModelsExtractTestRecord>
	 */
	@Override
	public PageInfo<ModelsExtractTestRecord> getModelTestRecordList(Map<String, Object> paramMap){
		List<ModelsExtractTestRecord> modelTestRecordList = modelsLibraryMapper.getModelTestRecordList(paramMap);
		PageInfo<ModelsExtractTestRecord> pageInfo = new PageInfo<>(modelTestRecordList);
		return pageInfo;
	}




}
