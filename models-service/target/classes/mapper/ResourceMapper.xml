<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ccx.models.mapper.ResourceMapper">

	<resultMap id="permissionMap" type="com.ccx.models.model.PermissionBean">
		<result property="id" column="ID"/>
		<result property="permissionName" column="permission_name"/>
		<result property="myselfId" column="myself_id"/>
		<result property="parentId" column="parent_id"/>
		<result property="type" column="type"/>
		<result property="level" column="level"/>
		<result property="pathUrl" column="path_url"/>
		<result property="iconUrl" column="icon_url"/>
		<result property="sequenceNum" column="sequence_num"/>
		<result property="permissionState" column="state"/>
		<result property="description" column="description"/>
		<result property="openMode" column="open_mode"/>
		<result property="institutionId" column="institution_id"/>
		<result property="createTime" column="createtime"/>
		<result property="creater" column="creater"/>
		<result property="modifier" column="modifier"/>
		<result property="createTime" column="modifytime"/>
	</resultMap>
	<sql id="Base_Column_List">
		id,
		myself_id,permission_name,type,parent_id,level,path_url,icon_url,sequence_num,state,description,
		open_mode,institution_id,createtime,creater,modifier,modifytime
	</sql>


	<!-- 获取所有权限列表 -->
	<select id="findAllPermission"   resultMap="permissionMap">
		SELECT
			*
		FROM
			models_permission
		WHERE
			STATE != 3
		ORDER BY
			`LEVEL`,
			PARENT_ID,
			SEQUENCE_NUM
	</select>

	<!-- 根据唯一标识获取权限列表 -->
	<select id="getPermissionbyMyselfID"   resultMap="permissionMap" parameterType="String">
		SELECT
			*
		FROM
			models_permission
		WHERE
			MYSELF_ID = #{0}
	</select>

	<!-- 新增权限 -->
	<insert id="addPermissions" parameterType="com.ccx.models.model.PermissionBean">
   		INSERT INTO models_permission (
			MYSELF_ID,
			PARENT_ID,
			PERMISSION_NAME,
			TYPE,
			LEVEL,
			PATH_URL,
			ICON_URL,
			SEQUENCE_NUM,
			STATE,
			DESCRIPTION,
			CREATETIME,
			CREATER,
			OPEN_MODE,
			institution_id
		)
		VALUES
			(
				#{myselfId},
				#{parentId},
				#{permissionName},
				#{type},
				#{level},
				#{pathUrl},
				#{iconUrl},
				#{sequenceNum},
				1,
				#{description},
				NOW(),
				#{creater},
				#{openMode},
				#{institutionId}
			)
	</insert>

	<!--  获取用户菜单权限  -->
	<select id="getPermissionbyParentId" parameterType="string" resultType="com.ccx.models.model.PermissionBean">
			SELECT
			   ID id,
			   MYSELF_ID myselfId,
			   PERMISSION_NAME permissionName,
			   TYPE type,
			   PATH_URL pathUrl,
			   ICON_URL iconUrl,
			   SEQUENCE_NUM sequenceNum,
			   STATE state,
			   PARENT_ID parentId,
			   LEVEL level
			FROM models_permission
			   WHERE PARENT_ID =#{value} ORDER BY LEVEL,PARENT_ID,SEQUENCE_NUM
	</select>

	<!--  删除权限（更改权限状态）  -->
	<update id="modifypermissionState" parameterType="com.ccx.models.model.PermissionBean" >
    update models_permission set
       STATE = 3,
       MODIFIER = #{modifier},
       MODIFYTIME = #{modifyTime}
    where MYSELF_ID = #{myselfId}
  </update>

  <!--  编辑权限  -->
   <update id="modifypermission" parameterType="com.ccx.models.model.PermissionBean" >
    update models_permission
    <set >
      <if test="myselfId != null" >
        MYSELF_ID = #{myselfId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="permissionName != null" >
        PERMISSION_NAME = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=BIGINT},
      </if>
      <if test="level != null" >
        LEVEL = #{level,jdbcType=BIGINT},
      </if>
      <if test="pathUrl != null" >
        PATH_URL = #{pathUrl,jdbcType=VARCHAR},
      </if>
      <if test="iconUrl != null" >
        ICON_URL = #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="sequenceNum != null" >
        SEQUENCE_NUM = #{sequenceNum,jdbcType=BIGINT},
      </if>
      <if test="permissionState != null" >
        STATE = #{permissionState,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="openMode != null" >
        OPEN_MODE = #{openMode,jdbcType=VARCHAR},
      </if>
      <if test="institutionId != null" >
        institution_id = #{institutionId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATETIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null" >
        CREATER = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null" >
        MODIFIER = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFYTIME = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <!-- 根据parentId获取子资源 -->
  <select id="selectResByPidd" resultMap="permissionMap" parameterType="java.lang.Long">
	select <include refid="Base_Column_List" />
  	from models_permission
	where myself_id in (select myself_id
  	from abs_module
	where institution_id = #{insId,jdbcType=INTEGER})
  </select>
  <select id="selectResByPid" resultMap="permissionMap" parameterType="String">
  	select <include refid="Base_Column_List" />
  	from models_permission
	where PARENT_ID = #{parentId,jdbcType=VARCHAR} and STATE = 1
  </select>

  <!-- 根据id查询资源 -->
  <select id="selectResourceById" resultMap="permissionMap" parameterType="java.lang.Long">
  	select <include refid="Base_Column_List" />
  	from models_permission
  	where 1=1 and STATE=1 and ID = #{resId,jdbcType=BIGINT}
  </select>

  <!-- 根据myselfId查询id -->
  <select id="selectByMyself" parameterType="java.lang.String" resultType="java.lang.Long">
  	select id
  	from models_permission
  	where MYSELF_ID = #{myselfId,jdbcType=VARCHAR}
  </select>


  <!--根据模块获取左侧导航栏 -->
  <select id="getLeftNavigation" resultMap="permissionMap" parameterType="java.util.Map">
    SELECT
		a.id,
		a.MYSELF_ID,
		a.PERMISSION_NAME,
		a.TYPE,
		a.PARENT_ID,
		a. LEVEL,
		a.PATH_URL,
		a.ICON_URL,
		a.SEQUENCE_NUM,
		a.STATE,
		a.DESCRIPTION,
		a.open_mode,
		a.institution_id,
		a.CREATETIME,
		a.CREATER,
		a.MODIFIER,
		a.MODIFYTIME
	FROM
		models_permission a,
		models_role_permission b,
		abs_user_role_fg c
	WHERE
		a.ID = b.resource_id
	AND b.role_id = c.role_id
	AND a.STATE = 1
	AND a.PARENT_ID = #{myselfId,jdbcType=VARCHAR}
	AND c.user_id = #{userId,jdbcType=BIGINT}
	ORDER BY a.SEQUENCE_NUM
  </select>


  <!-- 查询该机构下的权限树 -->
  <select id="findInsPermissionTreeMy" resultType="com.ccx.models.model.PermissionTreeBean">
		SELECT
			D.id,
			D.text,
			D.parentId,
			CASE
		WHEN D.ids IN (
			SELECT
				resource_id
			FROM
				models_role_permission
			WHERE
				role_id = #{roleId,jdbcType=BIGINT}
		) THEN
			1
		ELSE
			0
		END checked
		FROM
			(
				SELECT
					A.id AS ids,
					A.MYSELF_ID AS id,
					A.PERMISSION_NAME AS text,
					A.PARENT_ID AS parentId
				FROM
					models_permission AS A
				WHERE
					A.STATE = 1
				AND A.MYSELF_ID LIKE CONCAT(#{myselfId,jdbcType=VARCHAR},'%')
				ORDER BY
					A.`LEVEL`,
					A.PARENT_ID,
					A.SEQUENCE_NUM
			) D
  </select>

  <!-- 保存分配权限 -->
  <delete id="delRolePermissionByRole" parameterType="java.lang.Long">
		DELETE
		FROM
			models_role_permission
		WHERE
			role_id = #{id,jdbcType=BIGINT}
  </delete>
  <select id="getPermissionId" parameterType="String" resultType="Integer">
		SELECT
			id
		FROM
			models_permission
		WHERE
			MYSELF_ID = #{perId,jdbcType=BIGINT}
  </select>
  <insert id="saveRolePermission" >
   		INSERT INTO 
   			models_role_permission 
   			(
   				role_id, 
   				resource_id
   			)
		VALUE
			(
				#{id},
				#{perId}
			)
	</insert>


	<!-- 查询所有权限树 -->
	<select id="finRolePermissionTree" parameterType="java.lang.Long" resultType="com.ccx.models.model.PermissionTreeBean">
		SELECT
		A.MYSELF_ID AS id,
		A.PERMISSION_NAME AS text,
		A.PARENT_ID AS parentId,
		CASE
		WHEN A.ID IN (
		SELECT
		resource_id
		FROM
		models_role_permission
		WHERE
		role_id = #{id,jdbcType=BIGINT}
		) THEN
		1
		ELSE
		0
		END checked
		FROM
		models_permission AS A
		where STATE = 1
		ORDER BY
		`LEVEL`,
		PARENT_ID,
		SEQUENCE_NUM
	</select>
  
  
</mapper>
