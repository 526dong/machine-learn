/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2017-12-22 10:14:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.datafile;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dataFileImport_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/datafile/../commons/taglibs.jsp", Long.valueOf(1513047665316L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");

String path = request.getContextPath();
String basePath = request.getScheme() + "://"+ request.getServerName() + ":" + request.getServerPort()+ path ;
request.setAttribute("ctx",basePath);

      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"icon\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/img/favicon.ico\" type=\"image/x-icon\">\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/js/jquery-1.7.1.min.js\"></script>\r\n");
      out.write("<script\tsrc=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/old-js/jquery.validate.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//全局ajax session 过期 跳转登陆\r\n");
      out.write("jQuery(function($){\r\n");
      out.write("\t //首先备份下jquery的ajax方法\r\n");
      out.write("    var _ajax=$.ajax;\r\n");
      out.write("\r\n");
      out.write("    //重写jquery的ajax方法\r\n");
      out.write("    $.ajax=function(opt){\r\n");
      out.write("        //备份opt中error和success方法\r\n");
      out.write("        var fn = {\r\n");
      out.write("            error:function(XMLHttpRequest, textStatus, errorThrown){},\r\n");
      out.write("            success:function(data, textStatus){}\r\n");
      out.write("        }\r\n");
      out.write("        if(opt.error){\r\n");
      out.write("            fn.error=opt.error;\r\n");
      out.write("        }\r\n");
      out.write("        if(opt.success){\r\n");
      out.write("            fn.success=opt.success;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        //扩展增强处理\r\n");
      out.write("        var_opt = $.extend(opt,{\r\n");
      out.write("            error:function(XMLHttpRequest, textStatus, errorThrown){\r\n");
      out.write("                //错误方法增强处理\r\n");
      out.write("                fn.error(XMLHttpRequest, textStatus, errorThrown);\r\n");
      out.write("            },\r\n");
      out.write("            success:function(data, textStatus){\r\n");
      out.write("                //成功回调方法增强处理\r\n");
      out.write("                if(\"300\" == data.user_status){\r\n");
      out.write("                    onlinePersonjAlert('您的账号在其它设备登录，您已下线，请重新登录！',function(){\r\n");
      out.write("                        $.post('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/logout', function(result) {\r\n");
      out.write("                            window.location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/login';\r\n");
      out.write("                        }, 'json');\r\n");
      out.write("                    })\r\n");
      out.write("            \t}else{\r\n");
      out.write("            \t\tfn.success(data, textStatus);\r\n");
      out.write("            \t}\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        return _ajax(opt);\r\n");
      out.write("    };\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function onlinePersonjAlert(msg,fn){\r\n");
      out.write("    var html = '<div class=\"confirm\" style=\"z-index:999\"><div class=\"confirm-bg\"></div><div class=\"confirm-modal\"><p class=\"confirm-info\">'+msg+'</p><div class=\"confirm-options\"><span class=\"j-button confirm-sure\">确认</span></div></div></div>';\r\n");
      out.write("    $('body').append(html);\r\n");
      out.write("    $(document).on('click','.confirm-options .j-button',function(){\r\n");
      out.write("        var confirmButton = $(this);//本this指向当前被点击按钮元素\r\n");
      out.write("        if(confirmButton.hasClass('confirm-sure')){\r\n");
      out.write("            fn();\r\n");
      out.write("        }\r\n");
      out.write("        confirmButton.parents('.confirm').fadeOut(200).remove();\r\n");
      out.write("    });\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("    <title>数据文件-数据导入</title>\r\n");
      out.write("    <link type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/css/style.css\" rel=\"stylesheet\" />\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/js/main.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/js/ajaxfileupload.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/js/myValidate.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".select-file .text-box {\r\n");
      out.write("    width: 258px;\r\n");
      out.write("}\r\n");
      out.write(".select-file .j-input {\r\n");
      out.write("    width: 300px;\r\n");
      out.write("    color: #7c8ca5;\r\n");
      out.write("}\r\n");
      out.write(".select-file .j-select-placeholder {\r\n");
      out.write("    width: 257px;\r\n");
      out.write("}\r\n");
      out.write("/*input select start*/\r\n");
      out.write(".d-input {\r\n");
      out.write("    border: none;\r\n");
      out.write("    outline: none;\r\n");
      out.write("}\r\n");
      out.write(".di {\r\n");
      out.write("    padding: 0 25px 0 15px;\r\n");
      out.write("    height: 34px;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    line-height: 34px;\r\n");
      out.write("    background-color: rgba(6, 34, 71,0.5);\r\n");
      out.write("    border: 1px solid rgb(55, 91, 148);\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write(".j-select-options-i {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    top: 50px;\r\n");
      out.write("    left: 0;\r\n");
      out.write("    z-index: 999;\r\n");
      out.write("    display: none;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    max-height: 150px;\r\n");
      out.write("    overflow-y: auto;\r\n");
      out.write("}\r\n");
      out.write(".j-select-options-i ul{\r\n");
      out.write("    background-color: rgba(6,34,71,0.7);\r\n");
      out.write("    color: #4fa0ef;\r\n");
      out.write("}\r\n");
      out.write(".j-select-options-i li:hover {\r\n");
      out.write("    background-color: #104983;\r\n");
      out.write("}\r\n");
      out.write(".j-select-options-i li {\r\n");
      out.write("    display: block;\r\n");
      out.write("    padding: 8px 20px 8px 13px;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    line-height: 14px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("/*input select end*/\r\n");
      out.write("</style>\r\n");
      out.write("<script !src=\"\">\r\n");
      out.write("var splitCodeArray = new Array();\r\n");
      out.write("\r\n");
      out.write("$(function () {\r\n");
      out.write("    //定时清理error信息\r\n");
      out.write("    inputValInterVal();\r\n");
      out.write("    //文件名称赋值、校验\r\n");
      out.write("    fileNameVal();\r\n");
      out.write("    //分隔符集合赋值\r\n");
      out.write("    getSplitCodeArray();\r\n");
      out.write("    //输入框搜索\r\n");
      out.write("    getInputSearch();\r\n");
      out.write("});\r\n");
      out.write("/**\r\n");
      out.write(" * 获取分隔符集合\r\n");
      out.write(" */\r\n");
      out.write("function getSplitCodeArray(){\r\n");
      out.write("    splitCodeArray.push(\"逗号\");\r\n");
      out.write("    splitCodeArray.push(\"制表符\");\r\n");
      out.write("}\r\n");
      out.write("/**\r\n");
      out.write(" *  输入框搜索\r\n");
      out.write(" */\r\n");
      out.write("function getInputSearch(){\r\n");
      out.write("    $(document).on(\"click\", \".di\", function (e) {\r\n");
      out.write("        var _this = $(this);\r\n");
      out.write("        var arrow = _this.siblings('.j-select-arrow');\r\n");
      out.write("        var menuDiv = _this.parents('.j-select').find('.j-select-options-i');\r\n");
      out.write("\r\n");
      out.write("        arrow.toggleClass('active');\r\n");
      out.write("        menuDiv.slideToggle();\r\n");
      out.write("        $(document).one('click',function(){\r\n");
      out.write("            arrow.removeClass('active');\r\n");
      out.write("            $(\".j-select-options-i\").slideUp();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        e.stopPropagation();\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //li选中\r\n");
      out.write("    $(document).on('click','.j-select-options-i li',function(){\r\n");
      out.write("        var inputLabel =  $(this).parents(\".j-select\").find(\".di input\");\r\n");
      out.write("        inputLabel.val($(this).text());\r\n");
      out.write("    });\r\n");
      out.write("}\r\n");
      out.write("//数据文件-录入\r\n");
      out.write("var submitImportFlag = false;\r\n");
      out.write("function submitImportDataFile() {\r\n");
      out.write("    if (submitImportFlag) {return;}\r\n");
      out.write("    submitImportFlag = true;\r\n");
      out.write("\r\n");
      out.write("    //必填校验\r\n");
      out.write("    if (!validateValue()) {\r\n");
      out.write("        submitImportFlag = false;\r\n");
      out.write("        return;\r\n");
      out.write("    } else {\r\n");
      out.write("        //携带值\r\n");
      out.write("        var fileName = $(\"#fileName\").val();\r\n");
      out.write("        /*var fileType = $(\"#fileType\").val();\r\n");
      out.write("        var fileCode = $(\"#fileCode\").val();*/\r\n");
      out.write("        var splitCode = $(\"#splitCode\").val();\r\n");
      out.write("        var nullValue = $(\"#nullValue\").val();\r\n");
      out.write("        var targetName = $(\"#targetName\").val();\r\n");
      out.write("        var indexName = $(\"#indexName\").val();\r\n");
      out.write("        var description = $(\"#description\").val();\r\n");
      out.write("\r\n");
      out.write("        /*//文件后缀名称和选择的文件类型校验\r\n");
      out.write("        if (!validateFileLastName(fileType)) {\r\n");
      out.write("            jAlert(\"文件后缀名称和选择的文件类型不相符！\");\r\n");
      out.write("            submitImportFlag = false;\r\n");
      out.write("            return;\r\n");
      out.write("        } else {*/\r\n");
      out.write("            //校验文件名称唯一\r\n");
      out.write("            if (validateName(fileName)) {\r\n");
      out.write("                //列表url\r\n");
      out.write("                var listUrl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/modelsDataFile/list\";\r\n");
      out.write("\r\n");
      out.write("                //显示load\r\n");
      out.write("                var loader = document.getElementById('loader');\r\n");
      out.write("                loader.style.display = 'block';\r\n");
      out.write("\r\n");
      out.write("                $.ajaxFileUpload({\r\n");
      out.write("                    url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/modelsDataFile/doImportDataFile?fileName=\"+fileName+\"&splitCode=\"+splitCode\r\n");
      out.write("                    +\"&nullValue=\"+nullValue+\"&targetName=\"+targetName+\"&indexName=\"+indexName+\"&description=\"+description,\r\n");
      out.write("                    secureuri : false,//是否需要安全协议\r\n");
      out.write("                    fileElementId : \"dataFile\",\r\n");
      out.write("                    dataType : \"txt\",\r\n");
      out.write("                    type : \"POST\",\r\n");
      out.write("                    async : false,\r\n");
      out.write("                    success : function(data) {\r\n");
      out.write("                        loader.style.display = 'none';\r\n");
      out.write("\r\n");
      out.write("                        //转化obj类型\r\n");
      out.write("                        var reData = eval('(' + data + ')');\r\n");
      out.write("\r\n");
      out.write("                        if(reData.code == 200){\r\n");
      out.write("                            var menuIndex = parseInt(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${menuIndex}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\")+1;\r\n");
      out.write("                            listUrl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/modelsDataFile/list?menuIndex=\"+menuIndex;\r\n");
      out.write("\r\n");
      out.write("                            jAlert(\"导入成功！\", listUrl);\r\n");
      out.write("                        } else {\r\n");
      out.write("                            showMsg(reData.msg);\r\n");
      out.write("                            submitImportFlag = false;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        /*}*/\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("/**\r\n");
      out.write(" * 显示错误信息\r\n");
      out.write(" */\r\n");
      out.write("function showMsg(msg) {\r\n");
      out.write("    //获取错误信息集合\r\n");
      out.write("    var errArray = createErrArray();\r\n");
      out.write("\r\n");
      out.write("    //mark row column error\r\n");
      out.write("    if (msg.indexOf(\",\") > 0) {\r\n");
      out.write("        //err type/val\r\n");
      out.write("        var columnVal = msg.split(\",\");\r\n");
      out.write("\r\n");
      out.write("        if (columnVal.length > 0) {\r\n");
      out.write("            //err type\r\n");
      out.write("            var errType = columnVal[0];\r\n");
      out.write("\r\n");
      out.write("            if (errType == \"103\") {\r\n");
      out.write("                if (columnVal.length == 2) {\r\n");
      out.write("                    jAlert(\"填写的文件分隔符与文件中的不相符！\");\r\n");
      out.write("                }\r\n");
      out.write("            } else if (errType == \"104\") {\r\n");
      out.write("                if (columnVal.length == 2) {\r\n");
      out.write("                    jAlert(\"文件中第\"+columnVal[1]+\"列列名称不符合规范！\");\r\n");
      out.write("                } else {\r\n");
      out.write("                    jAlert(\"文件中第\"+columnVal[1]+\"列和第\"+columnVal[2]+\"列名称相同！\");\r\n");
      out.write("                }\r\n");
      out.write("            } else if (errType == \"105\") {\r\n");
      out.write("                if (columnVal.length == 2) {\r\n");
      out.write("                    //row last value null\r\n");
      out.write("                    jAlert(\"文件中第\"+columnVal[1]+\"行最后一个值为空！\");\r\n");
      out.write("                }\r\n");
      out.write("            } else if (errType == \"106\") {\r\n");
      out.write("                if (columnVal.length == 4) {\r\n");
      out.write("                    jAlert(\"文件中第\"+columnVal[2]+\"行第\"+columnVal[3]+\"列\"+errArray[columnVal[1]]);\r\n");
      out.write("                } else {\r\n");
      out.write("                    jAlert(\"文件中第\"+columnVal[4]+\"列第\"+columnVal[2]+\"行和第\"+columnVal[3]+\"行\"+errArray[columnVal[1]]);\r\n");
      out.write("                }\r\n");
      out.write("            } else {\r\n");
      out.write("                console.error(\"未识别错误！\");\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    } else {\r\n");
      out.write("        if (msg) {\r\n");
      out.write("            jAlert(errArray[msg]);\r\n");
      out.write("        } else {\r\n");
      out.write("            jAlert(\"导入失败！\");\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("/**\r\n");
      out.write(" * 校验文件后缀名\r\n");
      out.write(" * @param name\r\n");
      out.write(" * @param type\r\n");
      out.write(" */\r\n");
      out.write("function validateFileLastName(type) {\r\n");
      out.write("    //文件名称\r\n");
      out.write("    var fileName = $(\"#source_file_name\").text();\r\n");
      out.write("    return (fileName.substring((fileName.indexOf(\".\")+1)) == type) ? true : false;\r\n");
      out.write("}\r\n");
      out.write("//创建错误集合\r\n");
      out.write("function createErrArray(){\r\n");
      out.write("    //错误集合\r\n");
      out.write("    var errArray = new Array();\r\n");
      out.write("\r\n");
      out.write("    //参数为空 params null\r\n");
      out.write("    errArray[\"101\"] = \"导入失败，请联系管理员！\";\r\n");
      out.write("    //code\r\n");
      out.write("    errArray[\"102\"] = \"填写的文件编码和解析的文件编码格式不一致！\";\r\n");
      out.write("    //split code\r\n");
      out.write("    errArray[\"103\"] = \"文件分隔符为中文格式！\";\r\n");
      out.write("    //column\r\n");
      out.write("    errArray[\"104\"] = \"文件列名称不符合规范！\";\r\n");
      out.write("    //index name not in file\r\n");
      out.write("    errArray[\"107\"] = \"填写的index name不是文件中的列名！\";\r\n");
      out.write("    //target name not in file\r\n");
      out.write("    errArray[\"108\"] = \"填写的target name不是文件中的列名！\";\r\n");
      out.write("    /**\r\n");
      out.write("     * 106下还有三种情况\r\n");
      out.write("     *  标志位1 106\r\n");
      out.write("     *  标志位2 1-index列/target列中有空值，2-index列中有相同的值，3-target列中有不是0和1的值\r\n");
      out.write("     *  标志位3 行号\r\n");
      out.write("     *  标志位4 列号\r\n");
      out.write("     */\r\n");
      out.write("    errArray[\"1\"] = \"为空值！\";\r\n");
      out.write("    errArray[\"2\"] = \"存在相同值！\";\r\n");
      out.write("    errArray[\"3\"] = \"值不是0和1！\";\r\n");
      out.write("\r\n");
      out.write("    return errArray;\r\n");
      out.write("}\r\n");
      out.write("/**\r\n");
      out.write(" * 验证文件名称唯一\r\n");
      out.write(" */\r\n");
      out.write("function validateName(name) {\r\n");
      out.write("    //validate is pass\r\n");
      out.write("    var flag = true;\r\n");
      out.write("\r\n");
      out.write("    $.ajax({\r\n");
      out.write("        url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/modelsDataFile/validateName\",\r\n");
      out.write("        type:'POST',\r\n");
      out.write("        data:{\r\n");
      out.write("            \"name\":name\r\n");
      out.write("        },\r\n");
      out.write("        async: false,\r\n");
      out.write("        success:function(data){\r\n");
      out.write("            if (200 == data.code) {\r\n");
      out.write("                $(\"#fileNameCheckError\").hide();\r\n");
      out.write("            } else {\r\n");
      out.write("                flag = false;\r\n");
      out.write("                $(\"#fileNameCheckError\").show();\r\n");
      out.write("                $(\"#fileNameCheckError\").text(data.msg);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    return flag;\r\n");
      out.write("}\r\n");
      out.write("//必填校验\r\n");
      out.write("function validateValue() {\r\n");
      out.write("    var passFlag = false;\r\n");
      out.write("\r\n");
      out.write("    //input id\r\n");
      out.write("    var inputIdsArr = new Array();\r\n");
      out.write("    //校验规则\r\n");
      out.write("    var rulesArr = new Array();\r\n");
      out.write("\r\n");
      out.write("    //文件名称\r\n");
      out.write("    var fileName = $('#source_file_name').text();\r\n");
      out.write("    $(\"#file\").val(fileName);\r\n");
      out.write("\r\n");
      out.write("    //校验有没有选择文件\r\n");
      out.write("    inputIdsArr.push(\"file\");\r\n");
      out.write("    rulesArr.push(\"require\");\r\n");
      out.write("\r\n");
      out.write("    //测试用例\r\n");
      out.write("    $(\"#dataFileForm\").find(\"input[data-id='1']\").each(function (i, obj) {\r\n");
      out.write("        inputIdsArr.push($(this).attr(\"id\"));\r\n");
      out.write("        rulesArr.push(\"require\");\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    /*调用自定义校验方法*/\r\n");
      out.write("    myValidateEasy(\r\n");
      out.write("        {\r\n");
      out.write("            items : inputIdsArr,\r\n");
      out.write("            rules : rulesArr,\r\n");
      out.write("            success : function (data) {\r\n");
      out.write("                passFlag = true;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    );\r\n");
      out.write("\r\n");
      out.write("    return passFlag;\r\n");
      out.write("}\r\n");
      out.write("//定时清理error信息\r\n");
      out.write("function inputValInterVal(obj){\r\n");
      out.write("    //添加定时器处理标识\r\n");
      out.write("    var initCount = setInterval(function () {\r\n");
      out.write("        //其他input\r\n");
      out.write("        var inputVal = $(obj).val();\r\n");
      out.write("        var inputId = $(obj).attr(\"id\");\r\n");
      out.write("        if (inputVal != \"\") {\r\n");
      out.write("            $(\"#\"+inputId+\"Error\").hide();\r\n");
      out.write("\r\n");
      out.write("            //clear interval\r\n");
      out.write("            clearInterval(initCount);\r\n");
      out.write("        }\r\n");
      out.write("    }, 100);\r\n");
      out.write("}\r\n");
      out.write("/**\r\n");
      out.write(" * input select split code\r\n");
      out.write(" */\r\n");
      out.write("function matchName(obj) {\r\n");
      out.write("    var inputVal = obj.value;\r\n");
      out.write("    var liHtml = \"\";\r\n");
      out.write("    $.each(splitCodeArray, function (i, obj) {\r\n");
      out.write("        if (\"\" == inputVal) {\r\n");
      out.write("            liHtml += \"<li>\"+obj+\"</li>\";\r\n");
      out.write("        } else if (obj.indexOf(inputVal) >= 0) {\r\n");
      out.write("            liHtml += \"<li>\"+obj+\"</li>\";\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    if (\"\" == liHtml) {\r\n");
      out.write("        liHtml += \"<li></li>\"\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    $(obj).parent().next().find(\"ul\").html(liHtml);\r\n");
      out.write("}\r\n");
      out.write("//select input 赋值\r\n");
      out.write("$(document).on('click','.j-select-options li',function(){\r\n");
      out.write("    var _self = $(this);\r\n");
      out.write("    //input 赋值\r\n");
      out.write("    _self.parents('.j-select').find(\"input\").val(_self.text());\r\n");
      out.write("\r\n");
      out.write("    //清理error\r\n");
      out.write("    var inputId = _self.parents('.j-select').find(\"input\").attr(\"id\");\r\n");
      out.write("    if ($(\"#\"+inputId).val != \"\") {\r\n");
      out.write("        $(\"#\"+inputId+\"Error\").hide();\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("//文件名称赋值\r\n");
      out.write("function fileNameVal() {\r\n");
      out.write("    $(document).on(\"change\", \"#dataFile\", function(){\r\n");
      out.write("    /*$('#dataFile').on('change',function(){*/\r\n");
      out.write("        var _this = $(this);\r\n");
      out.write("        var filename = _this.get(0).files[0].name;\r\n");
      out.write("\r\n");
      out.write("        //校验文件格式\r\n");
      out.write("        var flag = fileNameValidate(filename);\r\n");
      out.write("\r\n");
      out.write("        if (flag) {\r\n");
      out.write("            $('#source_file_name').html(filename);\r\n");
      out.write("            //隐藏的文件input赋值\r\n");
      out.write("            $(\"#file\").val(filename);\r\n");
      out.write("            if (filename != \"\") {\r\n");
      out.write("                $(\"#fileError\").hide();\r\n");
      out.write("            }\r\n");
      out.write("        } else {\r\n");
      out.write("            jAlert(\"上传文件格式错误！请上传.csv文件或者.txt文件\");\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("}\r\n");
      out.write("//导入校验后缀\r\n");
      out.write("function fileNameValidate(fileName) {\r\n");
      out.write("    var flag = false;\r\n");
      out.write("\r\n");
      out.write("    var isCsv = fileName.indexOf('.csv');\r\n");
      out.write("    var isTxt = fileName.indexOf('.txt');\r\n");
      out.write("    if (isCsv > 0 || isTxt > 0) {\r\n");
      out.write("        flag = true;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    return flag;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("<img id=\"website-bgImg\" class=\"website-bg website-bg-show\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/img/bg.jpg\" alt=\"星空万象\">\r\n");
      out.write("<div id=\"loader\" style=\"display: none\">\r\n");
      out.write("    <div class=\"cssload-loader\">导入中</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- //网站背景 -->\r\n");
      out.write("<div class=\"j-container\">\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../commons/topHead.jsp", out, false);
      out.write("\r\n");
      out.write("    <!-- //header -->\r\n");
      out.write("    <div class=\"content\">\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../commons/leftNavigation.jsp", out, false);
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        <!-- //side-nav -->\r\n");
      out.write("        <div class=\"main\">\r\n");
      out.write("            <div class=\"main-header clearfix\">\r\n");
      out.write("                <div class=\"page-title\">\r\n");
      out.write("                    <h3>数据文件</h3>\r\n");
      out.write("                    <p>数据导入</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- //main-header -->\r\n");
      out.write("            <div id=\"select_file\">\r\n");
      out.write("                <div class=\"select-file\">\r\n");
      out.write("                    <form id=\"dataFileForm\" action=\"\" class=\"select-file-form\">\r\n");
      out.write("                        <div class=\"form-item clearfix\">\r\n");
      out.write("                            <label for=\"dataFile\" class=\"j-label\">选择文件</label>\r\n");
      out.write("                            <div class=\"form-item-content\">\r\n");
      out.write("                                <div class=\"text-box\" id=\"source_file_name\"></div>\r\n");
      out.write("                                <input id=\"file\" type=\"hidden\">\r\n");
      out.write("                                <div class=\"browser-file\">\r\n");
      out.write("                                    <input id=\"dataFile\" name=\"dataFile\" class=\"browser-file-ipt\" type=\"file\">\r\n");
      out.write("                                    <div class=\"j-button browser-file-btn\">\r\n");
      out.write("                                        <i class=\"browser-file-icon\"></i>\r\n");
      out.write("                                        <span>浏览</span>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <p id=\"fileError\" style=\"display: none\" class=\"form-item-err\">请选择文件</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-item clearfix\">\r\n");
      out.write("                            <label for=\"fileName\" class=\"j-label\">文件名称</label>\r\n");
      out.write("                            <div class=\"form-item-content\">\r\n");
      out.write("                                <input id=\"fileName\" type=\"text\" class=\"j-input\" data-id=\"1\" onchange=\"inputValInterVal(this);\" onblur=\"validateName(this.value);\">\r\n");
      out.write("                                <p id=\"fileNameError\" style=\"display: none\" class=\"form-item-err\">请输入文件名称</p>\r\n");
      out.write("                                <p id=\"fileNameCheckError\" style=\"display: none\" class=\"form-item-err\"></p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        ");
      out.write("\r\n");
      out.write("                        <div class=\"form-item clearfix\">\r\n");
      out.write("                            <label for=\"splitCode\" class=\"j-label\">文件分隔符</label>\r\n");
      out.write("                            <div class=\"form-item-content\">\r\n");
      out.write("                                <div class=\"j-select fl\">\r\n");
      out.write("                                    <i class=\"j-select-arrow\"></i>\r\n");
      out.write("                                    <div class=\"di project-item-select\">\r\n");
      out.write("                                        <input id=\"splitCode\" type=\"text\" data-id=\"1\" class=\"j-input d-input val\"\r\n");
      out.write("                                               onclick=\"matchName(this)\" onkeyup=\"matchName(this)\" onchange=\"inputValInterVal(this);\">\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"j-select-options-i\">\r\n");
      out.write("                                        <ul></ul>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <p id=\"splitCodeError\" style=\"display: none\" class=\"form-item-err\">请输入文件分隔符</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-item clearfix\">\r\n");
      out.write("                            <label for=\"nullValue\" class=\"j-label\">缺失值</label>\r\n");
      out.write("                            <div class=\"form-item-content\">\r\n");
      out.write("                                <input id=\"nullValue\" type=\"text\" data-id=\"0\" class=\"j-input fl\" onchange=\"inputValInterVal(this);\">\r\n");
      out.write("                                <div class=\"text-box fl\">变量内容为空的表达方式</div>\r\n");
      out.write("                                <p id=\"nullValueError\" style=\"display: none\" class=\"form-item-err\">请输入</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-item clearfix\">\r\n");
      out.write("                            <label for=\"targetName\" class=\"j-label\">目标变量列名</label>\r\n");
      out.write("                            <div class=\"form-item-content\">\r\n");
      out.write("                                <input id=\"targetName\" type=\"text\" data-id=\"1\" class=\"j-input fl\" onchange=\"inputValInterVal(this);\">\r\n");
      out.write("                                <p id=\"targetNameError\" style=\"display: none\" class=\"form-item-err\">请输入目标变量列名</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-item clearfix\">\r\n");
      out.write("                            <label for=\"indexName\" class=\"j-label\">样本索引列名</label>\r\n");
      out.write("                            <div class=\"form-item-content\">\r\n");
      out.write("                                <input id=\"indexName\" type=\"text\" data-id=\"1\" class=\"j-input fl\" onchange=\"inputValInterVal(this);\">\r\n");
      out.write("                                <p id=\"indexNameError\" style=\"display: none\" class=\"form-item-err\">请输入样本索引列名</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-item clearfix\">\r\n");
      out.write("                            <label for=\"description\" class=\"j-label\">文件描述</label>\r\n");
      out.write("                            <div class=\"form-item-content\">\r\n");
      out.write("                                <textarea id=\"description\" class=\"file-description\" cols=\"30\" rows=\"5\"></textarea>\r\n");
      out.write("                                ");
      out.write("\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"clearfix\">\r\n");
      out.write("                            <span class=\"j-button select-file-submit\" onclick=\"submitImportDataFile();\">导入</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- //select-file -->\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- //main -->\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- //content -->\r\n");
      out.write("</div>\r\n");
      out.write("<!-- //j-container -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
